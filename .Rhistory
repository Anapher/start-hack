data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
setwd("~/Documents/hackathon")
data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
summary(data)
head(data ,3)
head(data ,3)
summary(data)
data.train_nr <- as.factor(data.train_nr)
data.train_nr <- as.factor(data$train_nr)
summary(data)
summary(data.train_nr)
data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
summary(data)
data.line <- as.factor(data$line)
summary(data)
data.line <- as.factor(data$line)
summary(data)
summary(data.line)
data$valid <- as.factor(data$res_delta_valid)
summary(data)
data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
data$line <- as.factor(data$line)
data$valid <- as.factor(data$res_delta_valid)
summary(data)
data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
data$line <- as.factor(data$line)
d <- data[ ,!names(dat) %in% c("dep_soll","res_delta_soll", "res_delta_valid")]
summary(d)
data$line <- as.factor(data$line)
d <- data[ ,!names(dat) %in% c("dep_soll","res_delta_soll", "res_delta_valid")]
d <- data[ ,!names(data) %in% c("dep_soll","res_delta_soll", "res_delta_valid")]
summary(d)
d <- data[ ,!names(data) %in% c("res_delta_ist","res_delta_soll", "res_delta_valid")]
summary(d)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
data <- read.csv("reservation_data_2019-2021_incl_capacity.csv")
data$line <- as.factor(data$line)
d <- data[ ,!names(data) %in% c("res_delta_ist","res_delta_soll", "res_delta_valid")]
summary(d)
head(data ,3)
data %>%
group_by(train_nr) %>%
summarise(reserved = sum(reserved))
data %>%
group_by(train_nr, date) %>%
summarise(reserved = sum(reserved))
data %>%
group_by(train_nr, date) %>%
summarise(reserved = sum(reserved), capacity = mean(capacity))
summary(data)
summary(grouped)
grouped <- data %>%
group_by(train_nr, date) %>%
summarise(reserved = sum(reserved), capacity = mean(capacity))
summary(grouped)
wrong <- grouped[grouped$reserved > grouped$capacity]
wrong <- grouped[[grouped$reserved > grouped$capacity]]
train_capacity_avg <- data %>%
group_by(line) %>%
summarise(capacity = mean(capacity))
summary(train_capacity_avg)
train_capacity_avg <- data %>%
group_by(line) %>%
summarise(capacity = mean(capacity, na.rm=T))
summary(train_capacity_avg)
weather <- read.csv("weather.csv")
weather <- read.csv("weather.csv")
weather <- read.csv("weather.csv", sep=";")
summary(weather)
weather_grouped %>%
group_by(station_id) %>%
summarise(m = mean(eisure_biking.idx))
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = mean(eisure_biking.idx))
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = mean(leisure_biking.idx))
summary(weather_grouped)
summary(table(weather_grouped))
summary(weather_grouped)
weather_grouped
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = mean(leisure_biking.idx, na.rm=T))
summary(weather_grouped)
weather_grouped
weather
summary(weather)
weather$leisure_biking.idx <- as.numeric(gsub(",", ".", weather$leisure_biking.idx))
weather <- read.csv("weather.csv", sep=";")
summary(weather)
weather$leisure_biking.idx <- as.numeric(gsub(",", ".", weather$leisure_biking.idx))
summary(weather)
weather <- read.csv("weather.csv", sep=";")
summary(weather)
weather$leisure_biking.idx <- as.numeric(gsub(",", ".", weather$leisure_biking.idx))
summary(weather)
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = mean(leisure_biking.idx, na.rm=T))
summary(weather_grouped)
weather_grouped
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = averagge(leisure_biking.idx, na.rm=T))
weather_grouped
weather_grouped <- weather %>%
group_by(station_id) %>%
summarise(m = average(leisure_biking.idx, na.rm=T))
setwd("~/Documents/hackathon")
data <- read.csv("./train_congestion.csv")
data
data <- read.csv("./train_congestion.csv")
stops = c("BR", "VI", "FR", "SP", "TH", "BN", "ZUE", "ZFH", "W", "FF", "WF", "AW", "RH")
for(stop in stops) {
capacity_reached <- data[data$capacity - data[stop] <= 0]
capacity_reached
}
for(stop in stops) {
capacity_reached <- data[data$capacity - data[stop] <= 0]
capacity_reached
}
stops = c("BR", "VI", "FR", "SP", "TH", "BN", "ZUE", "ZFH", "W", "FF", "WF", "AW", "RH")
for(i in 1:length(stops)) {
stop <- stops[i]
capacity_reached <- data[data$capacity - data[stop] <= 0]
capacity_reached
}
capacity_reached
for(i in 1:length(stops)) {
stop <- stops[i]
capacity_reached <- data[data$capacity - data[stop] <= 0]
capacity_reached
}
stop
stop <- stops[i]
i
capacity_reached <- data[data$capacity - data[stop] <= 0]
capacity_reached
for(i in 1:length(stops)) {
stop
stop <- stops[i]
capacity_reached <- data[data$capacity - data[stop] <= 4]
capacity_reached
}
stop
stop <- stops[i]
capacity_reached <- data[data$capacity - data[stop] <= 4]
capacity_reached
for(i in 1:length(stops)) {
stop
stop <- stops[i]
capacity_reached <- data[data$capacity - data[stop] <= 4]
capacity_reached
}
data <- read.csv("./train_congestion.csv")
library(lubridate)
is_weekday = function(timestamp){
lubridate::wday(timestamp, week_start = 1) < 6
}
data$weekend <- is_weekday(data$date)
data
weather <- read.csv("weather.csv", sep=";")
summary(weather)
weather <- read.csv("weather.csv", sep=";")
weather$leisure_biking.idx <- as.numeric(gsub(",", ".", weather$leisure_biking.idx))
summary(weather)
weather <- read.csv("weather.csv", sep=";")
weather$leisure_biking.idx <- fix_decimals(weather$leisure_biking.idx)
fix_decimals = function(s) {
as.numeric(gsub(",", ".", s))
}
data$weekend <- is_weekday(data$date)
weather <- read.csv("weather.csv", sep=";")
weather$leisure_biking.idx <- fix_decimals(weather$leisure_biking.idx)
weather$t_2m:C <- fix_decimals(weather$t_2m:C)
weather
weather$snow_depth:cm <- fix_decimals(weather$snow_depth:cm)
weather$precip_24h:mm <- fix_decimals(weather$precip_24h:mm)
weather$leisure_biking.idx <- fix_decimals(weather$leisure_biking.idx)
weather <- read.csv("weather.csv", sep=";")
weather$leisure_biking.idx <- fix_decimals(weather$leisure_biking.idx)
weather$t_2m:C <- fix_decimals(weather$t_2m:C)
weather["t_2m:C"] <- fix_decimals(weather["t_2m:C"])
summary(weather)
weather$t_2m.C <- fix_decimals(weather$t_2m.C)
weather$snow_depth.cm <- fix_decimals(weather$snow_depth.cm)
weather$precip_24h.mm <- fix_decimals(weather$precip_24h.mm)
summary(weather)
weather$validdate <- gsub(":.*$", "", weather$validdate)
weather
weather$validdate <- gsub("T.*$", "", weather$validdate)
weather
merged <- merge(x = data, y = weather, by = "date")
weather$date <- gsub("T.*$", "", weather$validdate)
merged <- merge(x = data, y = weather, by = "date")
merged
merged <- merge(x = data, y = weather, by = "date")
stops = c("BR", "VI", "FR", "SP", "TH", "BN", "ZUE", "ZFH", "W", "FF", "WF", "AW", "RH")
for(i in 1:length(stops)) {
fm <- as.formula(paste(stops[i], "~", "weekend + leisure_biking.idx"))
model <- glm(fm, family = binomial(), data = merged)
model
}
fm <- as.formula(paste(stops[i], "~", "weekend + leisure_biking.idx"))
fm
model <- glm(fm, family = binomial(), data = merged)
model <- lm(fm, data = merged)
model
install.packages("rjson")
library(rjson)
stopsData <- fromJSON(file = folder + "/map.json")
folder = "./datas/1"
stopsData <- fromJSON(file = folder + "/map.json")
data <- read.csv(paste(folder, "train_congestion.csv", sep="/")
stopsData <- fromJSON(file = paste(folder, "map.json", sep="/")
data <- read.csv(paste(folder, "train_congestion.csv", sep="/")
data <- read.csv(paste(folder, "train_congestion.csv", sep="/"))
data <- read.csv(paste(folder, "train_congestion.csv", sep="/"))
stopsData <- fromJSON(file = paste(folder, "map.json", sep="/"))
stopsData
stopsData[[0]]
stopsData[[0:2]]
stopsData[[0:1]]
map_chr(stopsData, function(x) {x[1])
map_chr(stopsData, function(x) {x[1])
map_chr(stopsData, function(x) {x[1]})
library(purrr)
map_chr(stopsData, function(x) {x[1]})
map_chr(stopsData, function(x) {x[0]})
stopsData <- fromJSON(file = paste(folder, "map.json", sep="/"))
map_chr(stopsData, function(x) {x[0]})
stopsData
stopsData <- fromJSON(file = paste(folder, "map.json", sep="/"))
map_chr(stopsData, function(x) {x[1][1]})
map_chr(stopsData, function(x) {x[1][2]})
stopsData <- fromJSON(file = paste(folder, "map.json", sep="/"))
map_chr(stopsData, function(x) {x[1][2]})
stopsData
map_chr(stopsData, function(x) {x[1]})
stopsData
map_chr(stopsData, function(x) {x[2]})
